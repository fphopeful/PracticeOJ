/*
Given a positive integer, return its corresponding column title as appear in an Excel sheet.

For example:

    1 -> A
    2 -> B
    3 -> C
    ...
    26 -> Z
    27 -> AA
    28 -> AB 
*/
class Solution {
public:
    string convertToTitle(int n) {
        char ch;
        string tmp, res;
        while (n > 0) {
            if(n%26 == 0)//注意!一元操作符的优先级高于二元%,所以不能写成!n%26.
                ch = 'Z';
            else
                ch = (n % 26) + 'A' -1;
            tmp.clear();
            tmp.push_back(ch);
            res = tmp + res;//字符串相加,在前边的字符串就在前.给倒着拿数字提供了方便
            n = (n-1)/26;
        }
        return res;
    }
};
//如果每次要拿最低位,就取余(%进制数),然后把n每次取整/.循环.
//如果每次要拿最高位,就取整(/最高位的数所代表的数,如果没有限制,那么要考虑上边的思路了),
//然后,把n取余(%最高位的数所代表的数).循环.下次循环的时候,最高位的数就要降低一位.如果取整为0,那么继续降低一位.
