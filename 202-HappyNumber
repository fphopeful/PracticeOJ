
/*
Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 19 is a happy number

12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1
*/
/**
* 思路:不能让程序陷入死循环
* 当包含1的时候,不会出现循环.即,如果出现循环,那么就不会包含1.所以用一个容器来保存之前出现的数.只要出现了重复的,就返回false*用这个来实现代码.
**/
class Solution {
public:
    bool isHappy(int n) {
        set<long long> s;
        long long sum = 0;
        s.insert(n);
        if (n <= 0) return false;
        while(1) {
            sum = 0;
            while (n) {
                sum = sum + (n%10) *(n%10);
                n = n/10;
            }
            if (sum == 1) return true;
            if (s.find(sum) != s.end()) return false;
            else {
                s.insert(sum);
                n = sum;
            }
        }
    }
};
