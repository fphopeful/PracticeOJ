/*
Write a function that takes an unsigned integer and returns the number of ’1' bits it has (also known as the Hamming weight).
For example, the 32-bit integer ’11' has binary representation 00000000000000000000000000001011, so the function should return 3.
*/
//求1的个数,和0x1进行与,是1就说明最后一位不为0.
//教训:一个&表示按位与.
//n>>1右移只是运算符和+一样,不是赋值.n>>=1才是赋值
class Solution {
public:
    int hammingWeight(uint32_t n) {
        int res = 0;
        while(n) {
            if (n & 1)
                res ++;
            n = n>>1;
        }
        return res;
    }
};
